{"version":3,"sources":["webpack:///./src/app/layout/AssignedAgent/assignedAgent-routing.module.ts","webpack:///./src/app/layout/AssignedAgent/assignedAgent.component.css","webpack:///./src/app/layout/AssignedAgent/assignedAgent.component.html","webpack:///./src/app/layout/AssignedAgent/assignedAgent.component.ts","webpack:///./src/app/layout/AssignedAgent/assignedAgent.module.ts"],"names":[],"mappings":"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","file":"AssignedAgent-assignedAgent-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AssignedAgentComponent } from './assignedAgent.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: AssignedAgentComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AssignedAgentRoutingModule {}","module.exports = \".content-header{\\r\\n  position: relative;\\r\\n    padding: 15px 15px 0 15px;\\r\\n    background-color:transparent;\\r\\n    font:normal\\r\\n}\\r\\n\\r\\n.box{\\r\\n  position: relative;\\r\\n    border-radius: 3px;\\r\\n    background: #ffffff;\\r\\n    border-top: 3px solid #d2d6de;\\r\\n    margin-bottom: 20px;\\r\\n    /* width: 100%; */\\r\\n    box-shadow: 0 1px 1px rgba(0,0,0,0.1);\\r\\n    margin: 1% 1% 1% 1%;\\r\\n    /* box-shadow: 1px 2px 4px 1px rgba(0, 0, 0, 0.2),0 2px 10px 0 rgba(0, 0, 0, 0.12) !important; */\\r\\n}\\r\\n\\r\\n.box-header{\\r\\n  color: #444;\\r\\n    display: block;\\r\\n    padding: 10px;\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\nh2{\\r\\n  margin: 0;\\r\\n  font-size: 28px;\\r\\n  font:normal;\\r\\n  font-weight:normal;\\r\\n\\r\\n}\\r\\n\\r\\nh3{\\r\\n  display: inline-block;\\r\\n  font-size: 18px;\\r\\n  margin: 0;\\r\\n  line-height: 1;\\r\\n  font:normal;\\r\\n  font-weight:normal;\\r\\n}\\r\\n\\r\\nsmall{\\r\\n  font-size: 15px;\\r\\n    display: inline-block;\\r\\n    padding-left: 4px;\\r\\n    font-weight: 300;\\r\\n    line-height: 1; \\r\\n    color: #777;\\r\\n    font-family: sans-serif;\\r\\n}\\r\\n\\r\\nmd-select {\\r\\n  background-color: white;   \\r\\n  color: black;\\r\\n  border : 1px solid #666666;\\r\\n\\r\\n}\\r\\n\\r\\n.mat-form-field-appearance-outline .mat-form-field-outline-start \\r\\n.alignment{\\r\\nborder-top-left-radius: 0px;\\r\\nborder-top-right-radius: 0px;\\r\\nborder-bottom-right-radius: 0px;\\r\\nborder-bottom-left-radius: 0px;\\r\\n}\\r\\n\\r\\n/* \\r\\ntable, th, td {\\r\\n  border: 1px solid #f4f4f4;\\r\\n} */\\r\\n\\r\\n/* button{\\r\\n margin:2% 2% 2% 2%;\\r\\n}\\r\\n\\r\\n  .actions {\\r\\n    justify-content: flex-end;\\r\\n  }\\r\\n  \\r\\n  .container {\\r\\n    height: 100%;\\r\\n  }\\r\\n\\r\\n  .active-list-item {\\r\\n    color: #3F51B5 !important; \\r\\n  } */\\r\\n\\r\\ntable{\\r\\n    width:100%\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L0Fzc2lnbmVkQWdlbnQvYXNzaWduZWRBZ2VudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQWtCO0lBQ2hCLHlCQUF5QjtJQUN6Qiw0QkFBNEI7SUFDNUI7QUFDSjs7QUFFQTtFQUNFLGtCQUFrQjtJQUNoQixrQkFBa0I7SUFDbEIsbUJBQW1CO0lBQ25CLDZCQUE2QjtJQUM3QixtQkFBbUI7SUFDbkIsaUJBQWlCO0lBQ2pCLHFDQUFxQztJQUNyQyxtQkFBbUI7SUFDbkIsZ0dBQWdHO0FBQ3BHOztBQUVBO0VBQ0UsV0FBVztJQUNULGNBQWM7SUFDZCxhQUFhO0lBQ2Isa0JBQWtCO0FBQ3RCOztBQUVBO0VBQ0UsU0FBUztFQUNULGVBQWU7RUFDZixXQUFXO0VBQ1gsa0JBQWtCOztBQUVwQjs7QUFFQTtFQUNFLHFCQUFxQjtFQUNyQixlQUFlO0VBQ2YsU0FBUztFQUNULGNBQWM7RUFDZCxXQUFXO0VBQ1gsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsZUFBZTtJQUNiLHFCQUFxQjtJQUNyQixpQkFBaUI7SUFDakIsZ0JBQWdCO0lBQ2hCLGNBQWM7SUFDZCxXQUFXO0lBQ1gsdUJBQXVCO0FBQzNCOztBQUVBO0VBQ0UsdUJBQXVCO0VBQ3ZCLFlBQVk7RUFDWiwwQkFBMEI7O0FBRTVCOztBQUVBOztBQUVBLDJCQUEyQjtBQUMzQiw0QkFBNEI7QUFDNUIsK0JBQStCO0FBQy9CLDhCQUE4QjtBQUM5Qjs7QUFDQTs7O0dBR0c7O0FBRUg7Ozs7Ozs7Ozs7Ozs7O0tBY0s7O0FBRUg7SUFDRTtFQUNGIiwiZmlsZSI6InNyYy9hcHAvbGF5b3V0L0Fzc2lnbmVkQWdlbnQvYXNzaWduZWRBZ2VudC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRlbnQtaGVhZGVye1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIHBhZGRpbmc6IDE1cHggMTVweCAwIDE1cHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O1xyXG4gICAgZm9udDpub3JtYWxcclxufVxyXG5cclxuLmJveHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBib3JkZXItcmFkaXVzOiAzcHg7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xyXG4gICAgYm9yZGVyLXRvcDogM3B4IHNvbGlkICNkMmQ2ZGU7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gICAgLyogd2lkdGg6IDEwMCU7ICovXHJcbiAgICBib3gtc2hhZG93OiAwIDFweCAxcHggcmdiYSgwLDAsMCwwLjEpO1xyXG4gICAgbWFyZ2luOiAxJSAxJSAxJSAxJTtcclxuICAgIC8qIGJveC1zaGFkb3c6IDFweCAycHggNHB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMiksMCAycHggMTBweCAwIHJnYmEoMCwgMCwgMCwgMC4xMikgIWltcG9ydGFudDsgKi9cclxufVxyXG5cclxuLmJveC1oZWFkZXJ7XHJcbiAgY29sb3I6ICM0NDQ7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuXHJcbmgye1xyXG4gIG1hcmdpbjogMDtcclxuICBmb250LXNpemU6IDI4cHg7XHJcbiAgZm9udDpub3JtYWw7XHJcbiAgZm9udC13ZWlnaHQ6bm9ybWFsO1xyXG5cclxufVxyXG5cclxuaDN7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIGZvbnQtc2l6ZTogMThweDtcclxuICBtYXJnaW46IDA7XHJcbiAgbGluZS1oZWlnaHQ6IDE7XHJcbiAgZm9udDpub3JtYWw7XHJcbiAgZm9udC13ZWlnaHQ6bm9ybWFsO1xyXG59XHJcblxyXG5zbWFsbHtcclxuICBmb250LXNpemU6IDE1cHg7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDRweDtcclxuICAgIGZvbnQtd2VpZ2h0OiAzMDA7XHJcbiAgICBsaW5lLWhlaWdodDogMTsgXHJcbiAgICBjb2xvcjogIzc3NztcclxuICAgIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xyXG59XHJcblxyXG5tZC1zZWxlY3Qge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOyAgIFxyXG4gIGNvbG9yOiBibGFjaztcclxuICBib3JkZXIgOiAxcHggc29saWQgIzY2NjY2NjtcclxuXHJcbn1cclxuXHJcbi5tYXQtZm9ybS1maWVsZC1hcHBlYXJhbmNlLW91dGxpbmUgLm1hdC1mb3JtLWZpZWxkLW91dGxpbmUtc3RhcnQgXHJcbi5hbGlnbm1lbnR7XHJcbmJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDBweDtcclxuYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDBweDtcclxuYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDBweDtcclxuYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMHB4O1xyXG59XHJcbi8qIFxyXG50YWJsZSwgdGgsIHRkIHtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjZjRmNGY0O1xyXG59ICovXHJcblxyXG4vKiBidXR0b257XHJcbiBtYXJnaW46MiUgMiUgMiUgMiU7XHJcbn1cclxuXHJcbiAgLmFjdGlvbnMge1xyXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuICB9XHJcbiAgXHJcbiAgLmNvbnRhaW5lciB7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgfVxyXG5cclxuICAuYWN0aXZlLWxpc3QtaXRlbSB7XHJcbiAgICBjb2xvcjogIzNGNTFCNSAhaW1wb3J0YW50OyBcclxuICB9ICovXHJcblxyXG4gIHRhYmxle1xyXG4gICAgd2lkdGg6MTAwJVxyXG4gIH0iXX0= */\"","module.exports = \" \\r\\n <div style=\\\"background-color:#ecf0f5;width:100%; height:100%;\\\" >\\r\\n\\r\\n  <section class=\\\"content-header\\\">\\r\\n    <h2>\\r\\n      Manager \\r\\n      <small>Agent assigned to Managers</small>\\r\\n    </h2>\\r\\n    <!-- <ol class=\\\"breadcrumb\\\">\\r\\n      <li><a href=\\\"#\\\"><i class=\\\"fa fa-dashboard\\\"></i> Home</a></li>\\r\\n      <li><a href=\\\"#\\\">Tables</a></li>\\r\\n      <li class=\\\"active\\\">Data tables</li>\\r\\n    </ol> -->\\r\\n  </section>\\r\\n\\r\\n<div class=\\\"box\\\" >\\r\\n <!-- <div class=\\\"box-header\\\">\\r\\n  <h3 class=\\\"box-title\\\">Agent Assigned to manager</h3>\\r\\n</div>  -->\\r\\n\\r\\n\\r\\n<!-- <mat-form-field style=\\\"padding-left:1%\\\">\\r\\n  <mat-label> Select Manager</mat-label>\\r\\n  <mat-select [(ngModel)]=\\\"managerId\\\" (ngModelChange)=\\\"getAgent($event)\\\">\\r\\n    <mat-option *ngFor=\\\"let manager of Manager\\\" [value]=\\\"manager.id\\\">\\r\\n      {{manager.email}}\\r\\n    </mat-option>\\r\\n  </mat-select>\\r\\n</mat-form-field> -->\\r\\n<mat-form-field appearance=\\\"outline\\\" [hideRequiredMarker]=\\\"true\\\" class=\\\"alignment\\\" style=\\\"padding-left:1%\\\">\\r\\n<mat-label> Select Manager</mat-label>\\r\\n<mat-select [(ngModel)]=\\\"managerId\\\" (ngModelChange)=\\\"getAgent($event)\\\">\\r\\n  <mat-option *ngFor=\\\"let manager of Manager\\\" [value]=\\\"manager.id\\\">\\r\\n    {{manager.email}}\\r\\n  </mat-option>\\r\\n</mat-select>\\r\\n</mat-form-field>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div class=\\\"box\\\" >\\r\\n<table mat-table [dataSource]=\\\"dataSource\\\" style=\\\"border: gray\\\">\\r\\n    \\r\\n  <!-- <ng-container matColumnDef=\\\"select\\\" style=\\\"max-width: 50px\\\">\\r\\n    <mat-header-cell *matHeaderCellDef>\\r\\n      <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\r\\n                    [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\r\\n                    [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\"\\r\\n                    [aria-label]=\\\"checkboxLabel()\\\">\\r\\n      </mat-checkbox>\\r\\n    </mat-header-cell>\\r\\n    <mat-cell *matCellDef=\\\"let row\\\">\\r\\n      <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\r\\n                    (change)=\\\"$event ? selection.toggle(row) : null\\\"\\r\\n                    [checked]=\\\"selection.isSelected(row)\\\"\\r\\n                    [aria-label]=\\\"checkboxLabel(row)\\\">\\r\\n      </mat-checkbox>\\r\\n    </mat-cell>\\r\\n  </ng-container> -->\\r\\n\\r\\n  <ng-container matColumnDef=\\\"S No\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"width:100px\\\">S No.</th>\\r\\n      <td mat-cell *matCellDef=\\\"let user; let i = index;\\\" style=\\\"width:100px\\\"> {{i+1}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- <ng-container matColumnDef=\\\"img\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef></th>\\r\\n        <td mat-cell *matCellDef=\\\"let user;\\\"> \\r\\n        <img src=\\\"../../../assets/men.jpg\\\" style=\\\"width:50px;height:50px;margin:1% 1% 1% 1%; border-radius: 50%\\\">  \\r\\n        </td>\\r\\n      </ng-container> -->\\r\\n    <ng-container matColumnDef=\\\"firstName\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef style=\\\"text-align: center\\\">First Name </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element;\\\" style=\\\"text-align: center\\\"> \\r\\n          <img src=\\\"../../../assets/men.jpg\\\" style=\\\"width:50px;height:50px;margin:1% 1% 1% 1%; border-radius: 50%\\\">  &nbsp;&nbsp;\\r\\n         {{element.users.firstName}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"lastName\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Last Name </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element;\\\"> {{element.users.lastName}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"email\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>Email </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element;\\\"> {{element.users.email}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n<tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n<tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\\r\\n\\r\\n</div> \\r\\n \\r\\n </div>\\r\\n \\r\\n\\r\\n \\r\\n <mat-form-field appearance=\\\"outline\\\" [hideRequiredMarker]=\\\"true\\\" \\r\\nclass=\\\"alignment\\\">\\r\\n<mat-label>Email Address</mat-label>\\r\\n\\r\\n<input type=\\\"text\\\" matInput placeholder=\\\"Enter email address\\\">\\r\\n\\r\\n<mat-icon matPrefix >email</mat-icon>\\r\\n</mat-form-field>\\r\\n\\r\\n\\r\\n \\r\\n \\r\\n \\r\\n \\r\\n \\r\\n \\r\\n \\r\\n \\r\\n \\r\\n <!-- <mat-accordion>\\r\\n      <mat-expansion-panel [expanded]='f_firstPanel' [disabled]='!f_firstPanel'>\\r\\n          <mat-expansion-panel-header>\\r\\n              <mat-panel-title>\\r\\n                Select Manager\\r\\n              </mat-panel-title>\\r\\n              <mat-panel-description>\\r\\n                Agent Assignment\\r\\n              </mat-panel-description>\\r\\n            </mat-expansion-panel-header>\\r\\n        \\r\\n            <h4>Select Manager</h4>\\r\\n      <mat-form-field>\\r\\n        <mat-label>Manager</mat-label>\\r\\n        <mat-select [(ngModel)]=\\\"managerId\\\" (ngModelChange)=\\\"getAgent($event)\\\">\\r\\n          <mat-option *ngFor=\\\"let manager of Manager\\\" [value]=\\\"manager.id\\\">\\r\\n            {{manager.email}}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n      </mat-expansion-panel>\\r\\n        <mat-expansion-panel [expanded]='f_secondPanel' [disabled]='!f_secondPanel'>\\r\\n        <mat-expansion-panel-header>\\r\\n            <mat-panel-title>List of Agents</mat-panel-title>\\r\\n          </mat-expansion-panel-header>\\r\\n          <table mat-table [dataSource]=\\\"dataSource\\\" >\\r\\n    \\r\\n              <ng-container matColumnDef=\\\"S No\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef>S No.</th>\\r\\n                  <td mat-cell *matCellDef=\\\"let user; let i = index;\\\"> {{i+1}} </td>\\r\\n                </ng-container>\\r\\n            \\r\\n                <ng-container matColumnDef=\\\"img\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef></th>\\r\\n                    <td mat-cell *matCellDef=\\\"let user;\\\"> \\r\\n                    <img src=\\\"../../../assets/no-photo.png\\\" style=\\\"width:50px;height:50px;margin:1% 1% 1% 1%\\\">  \\r\\n                    </td>\\r\\n                  </ng-container>\\r\\n                <ng-container matColumnDef=\\\"firstName\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef>First Name </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element;\\\"> {{element.users.firstName}} </td>\\r\\n                </ng-container>\\r\\n        \\r\\n                <ng-container matColumnDef=\\\"lastName\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef>Last Name </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let element;\\\"> {{element.users.lastName}} </td>\\r\\n                  </ng-container>\\r\\n        \\r\\n                  <ng-container matColumnDef=\\\"email\\\">\\r\\n                      <th mat-header-cell *matHeaderCellDef>Email </th>\\r\\n                      <td mat-cell *matCellDef=\\\"let element;\\\"> {{element.users.email}} </td>\\r\\n                    </ng-container>\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n      </table>\\r\\n    \\r\\n    <br>\\r\\n    <div style=\\\"margin: auto\\\">\\r\\n    <button mat-raised-button color=\\\"primary\\\" style=\\\"margin: 30px\\\" (click)=\\\"editTrainer()\\\">Edit</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" style=\\\"margin: 30px\\\" (click)=\\\"cancelEdit()\\\">Cancel</button>\\r\\n    </div>\\r\\n        </mat-expansion-panel>\\r\\n    </mat-accordion> -->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\nimport { Observable } from 'rxjs';\r\nimport { of } from 'rxjs';\r\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\r\nimport {DataSource} from '@angular/cdk/collections';\r\nimport { AutoDialService } from '../../autoDialer.service';\r\nimport { FormControl, FormGroupDirective, NgForm, Validators, FormGroup, FormBuilder } from '@angular/forms';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n//For Mat table\r\nimport { MatTableDataSource } from '@angular/material';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {SelectionModel} from '@angular/cdk/collections';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport { MatDialog, MatSnackBar } from '@angular/material';\r\n\r\n@Component({\r\n    selector: 'app-assignedAgent',\r\n    templateUrl: './assignedAgent.component.html',\r\n    styleUrls: ['./assignedAgent.component.css']\r\n})\r\nexport class AssignedAgentComponent implements OnInit {\r\n  selection = new SelectionModel(true, []);\r\n    dataSource;\r\n    Manager;\r\n    managerId;   \r\n    object;\r\n\r\n     // Flags that control the expansion panel\r\n  f_firstPanel = false;\r\n  M_firstPanel = false;\r\n  f_secondPanel = false;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  \r\n    constructor(private toastrService: ToastrService, private formBuilder: FormBuilder, private service:  AutoDialService,  public router: Router) {\r\n       \r\n    }\r\n        ngOnInit(){\r\n            this.service.getAllManagers().subscribe((data)=>{\r\n              this.Manager= data['message'];\r\n            })\r\n             this.M_firstPanel = true;\r\n             this.f_firstPanel = true;\r\n        }\r\n\r\n        displayedColumns = [ 'S No', 'firstName','lastName', 'email'];\r\n\r\n        getAgent(){\r\n        \r\n          this.dataSource=[];\r\n          if(this.managerId){\r\n            this.object = { managerid : this.managerId }\r\n            this.service.getAssaignedAgentToManager(this.object).subscribe((data)=>{\r\n                this.dataSource = new MatTableDataSource(data['message']);\r\n                this.f_secondPanel = true;\r\n            })\r\n          }\r\n        }\r\n\r\n      //-------------------------------------------------------------------------------\r\n      editTrainer() {\r\n        // this.selectedTrainer = trainer; \r\n        this.f_firstPanel = false;\r\n        this.f_secondPanel = true;\r\n      }\r\n      cancelEdit() {\r\n        this.f_firstPanel = true;\r\n        this.f_secondPanel = false;\r\n\r\n      }\r\n      finishEdit() {\r\n        this.f_firstPanel = true;\r\n        this.f_secondPanel = false;\r\n      }\r\n\r\n    /** Whether the number of selected elements matches the total number of rows. */\r\n    // isAllSelected() {\r\n    //   const numSelected = this.selection.selected.length;\r\n    //   const numRows = this.dataSource.data.length;\r\n    //   return numSelected === numRows;\r\n    // }\r\n\r\n          /** The label for the checkbox on the passed row */\r\n    // checkboxLabel(row?): string {\r\n    //   if (!row) {\r\n    //     return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\r\n    //   }\r\n    //   return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\r\n    // }\r\n      \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AssignedAgentRoutingModule } from './assignedAgent-routing.module';\r\nimport { AssignedAgentComponent } from './assignedAgent.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MaterialModule } from '../../material/material.module';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, AssignedAgentRoutingModule,FormsModule, MaterialModule],\r\n    declarations: [ AssignedAgentComponent ]\r\n})\r\nexport class AssignedAgentModule {}\r\n"],"sourceRoot":""}