{"version":3,"sources":["webpack:///./src/app/agent/calls/PhoneBook/calendar/calendar.component.css","webpack:///./src/app/agent/calls/PhoneBook/calendar/calendar.component.html","webpack:///./src/app/agent/calls/PhoneBook/calendar/calendar.component.ts","webpack:///./src/app/agent/calls/PhoneBook/phoneBook-routing.module.ts","webpack:///./src/app/agent/calls/PhoneBook/phoneBook.component.css","webpack:///./src/app/agent/calls/PhoneBook/phoneBook.component.html","webpack:///./src/app/agent/calls/PhoneBook/phoneBook.component.ts","webpack:///./src/app/agent/calls/PhoneBook/phoneBook.module.ts"],"names":[],"mappings":"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","file":"PhoneBook-phoneBook-module.js","sourcesContent":["module.exports = \"\\n.app-top {\\n  margin: 0 0 3em;\\n}\\n\\n.app-calendar {\\n  margin: 0 auto;\\n  max-width: 900px;\\n}\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWdlbnQvY2FsbHMvUGhvbmVCb29rL2NhbGVuZGFyL2NhbGVuZGFyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxnQkFBZ0I7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9hZ2VudC9jYWxscy9QaG9uZUJvb2svY2FsZW5kYXIvY2FsZW5kYXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLmFwcC10b3Age1xuICBtYXJnaW46IDAgMCAzZW07XG59XG5cbi5hcHAtY2FsZW5kYXIge1xuICBtYXJnaW46IDAgYXV0bztcbiAgbWF4LXdpZHRoOiA5MDBweDtcbn1cblxuXG4iXX0= */\"","module.exports = \"\\n<div class='app'>\\n  <div class='app-calendar' *ngIf=\\\"calendarVisible\\\">\\n    <full-calendar\\n      #calendar\\n      defaultView=\\\"dayGridMonth\\\"\\n      [header]=\\\"{\\n        left: 'prev,next today',\\n        center: 'title',\\n        right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\\n      }\\\"\\n      [plugins]=\\\"calendarPlugins\\\"\\n      [weekends]=\\\"calendarWeekends\\\"\\n      [events]=\\\"calendarEvents\\\"\\n      (dateClick)=\\\"handleDateClick($event)\\\"\\n    ></full-calendar>\\n  </div>\\n\\n</div>\\n\"","import { Component, ViewChild } from '@angular/core';\nimport { FullCalendarComponent } from '@fullcalendar/angular';\nimport { EventInput } from '@fullcalendar/core';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGrigPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction'; // for dateClick\n\n@Component({\n  selector: 'app-calendar',\n  templateUrl: './calendar.component.html',\n  styleUrls: ['./calendar.component.css']\n})\nexport class CalendarComponent {\n\n  @ViewChild('calendar') calendarComponent: FullCalendarComponent; // the #calendar in the template\n\n  calendarVisible = true;\n  calendarPlugins = [dayGridPlugin, timeGrigPlugin, interactionPlugin];\n  calendarWeekends = true;\n  calendarEvents: EventInput[] = [\n    { title: 'Event Now', start: new Date() }\n  ];\n\n  toggleVisible() {\n    this.calendarVisible = !this.calendarVisible;\n  }\n\n  toggleWeekends() {\n    this.calendarWeekends = !this.calendarWeekends;\n  }\n\n  gotoPast() {\n    let calendarApi = this.calendarComponent.getApi();\n    calendarApi.gotoDate('2000-01-01'); // call a method on the Calendar object\n  }\n\n  handleDateClick(arg) {\n    if (confirm('Would you like to add an event to ' + arg.dateStr + ' ?')) {\n      this.calendarEvents = this.calendarEvents.concat({ // add new event data. must create new array\n        title: 'New Event',\n        start: arg.date,\n        allDay: arg.allDay\n      })\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PhoneBookComponent } from './phoneBook.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: PhoneBookComponent,\n        // children: [\n        //     { path: '', redirectTo: 'adminDashboard', pathMatch: 'prefix' },\n        //     { path: 'adminDashboard', loadChildren: './admin/adminDashboard.module#AdminDashboardModule' },\n        //     { path: 'employee', loadChildren: './onBoardEmployee/employee.module#EmployeeModule'},\n        //     { path: 'campaign', loadChildren: './campaign/campaign.module#CampaignModule'},\n        // ]\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class PhoneBookRoutingModule {}\n","module.exports = \"table {\\n    width: 100%;\\n    overflow-x: auto;\\n    overflow-y: hidden;\\n    min-width: 500px;\\n}\\n \\nmat-header-cell {\\n    text-align: left;\\n    max-width: 300px;\\n    max-height: 100px;\\n}\\n \\n.mat-form-field {\\n    font-size: 14px;\\n    width: 100%;\\n  }\\n \\n/*For calendar*/\\n \\n.app-top {\\n    margin: 0 0 3em;\\n  }\\n \\n.app-calendar {\\n    margin: 0 auto;\\n    max-width: 900px;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWdlbnQvY2FsbHMvUGhvbmVCb29rL3Bob25lQm9vay5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztJQUNYLGdCQUFnQjtJQUNoQixrQkFBa0I7SUFDbEIsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixpQkFBaUI7QUFDckI7O0FBQ0E7SUFDSSxlQUFlO0lBQ2YsV0FBVztFQUNiOztBQUVBLGVBQWU7O0FBQ2Y7SUFDRSxlQUFlO0VBQ2pCOztBQUVBO0lBQ0UsY0FBYztJQUNkLGdCQUFnQjtFQUNsQiIsImZpbGUiOiJzcmMvYXBwL2FnZW50L2NhbGxzL1Bob25lQm9vay9waG9uZUJvb2suY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBvdmVyZmxvdy14OiBhdXRvO1xuICAgIG92ZXJmbG93LXk6IGhpZGRlbjtcbiAgICBtaW4td2lkdGg6IDUwMHB4O1xufVxuIFxubWF0LWhlYWRlci1jZWxsIHtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIG1heC13aWR0aDogMzAwcHg7XG4gICAgbWF4LWhlaWdodDogMTAwcHg7XG59XG4ubWF0LWZvcm0tZmllbGQge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICBcbiAgLypGb3IgY2FsZW5kYXIqL1xuICAuYXBwLXRvcCB7XG4gICAgbWFyZ2luOiAwIDAgM2VtO1xuICB9XG4gIFxuICAuYXBwLWNhbGVuZGFyIHtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBtYXgtd2lkdGg6IDkwMHB4O1xuICB9Il19 */\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <!-- Control the column width, and how they should appear on different devices -->\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-8\\\">\\n            <!-- <div style=\\\"margin-top: 2%\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-3\\\">\\n                        <mat-card class=\\\"example-card\\\" style=\\\"max-width:100%\\\">\\n                            <mat-card-header>\\n        \\n                                <mat-card-title >\\n                                    <div class=\\\"row\\\"> \\n                                        <div class=\\\"col-sm-5\\\">\\n                                                <img src=\\\"../../../assets/men.jpg\\\"  style=\\\"border-radius: 50%;width: 100px; height: 100px;  margin-top: -5%;margin-left:-15%\\\">                              \\n                                            </div>\\n                                        <div class=\\\"col-sm-7\\\">                                           \\n                                                <h5>Avinash Bhalavi</h5>\\n                                                <h6>Node Developer</h6>\\n                                             \\n                                        </div>\\n                                       \\n                                    </div>\\n \\n                                </mat-card-title><br><br>\\n                                <mat-card-subtitle style=\\\"text-align:center;color:black\\\">\\n                                       \\n                                </mat-card-subtitle>\\n                            </mat-card-header>\\n                        </mat-card>\\n                      \\n\\n                    </div>\\n\\n                </div>\\n            </div> -->\\n          <!--TABLE---------------->\\n          <!-- <table mat-table [dataSource]=\\\"dataSource\\\">\\n            <ng-container matColumnDef=\\\"name\\\">\\n              <th mat-header-cell *matHeaderCellDef> Name </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\n            </ng-container>\\n           \\n            <ng-container matColumnDef=\\\"email\\\">\\n              <th mat-header-cell *matHeaderCellDef> Email </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.email}} </td>\\n            </ng-container>\\n           \\n            <ng-container matColumnDef=\\\"phone\\\">\\n                <th mat-header-cell *matHeaderCellDef> Mobile</th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element.phone}} </td>\\n              </ng-container>\\n\\n      \\n            <ng-container matColumnDef=\\\"details\\\">\\n              <th mat-header-cell *matHeaderCellDef> Details </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">\\n                <button mat-icon-button color=\\\"primary\\\" (click)=\\\"redirectToDetails()\\\">\\n                    <mat-icon class=\\\"mat-18\\\">reorder</mat-icon>\\n                </button>\\n              </td>\\n            </ng-container> \\n           \\n            <ng-container matColumnDef=\\\"edit\\\">\\n                <th mat-header-cell *matHeaderCellDef> Edit </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\n                  <button mat-icon-button color=\\\"accent\\\" (click)=\\\"redirectToUpdate()\\\">\\n                      <mat-icon class=\\\"mat-18\\\">system_update</mat-icon>\\n                  </button>\\n                </td>\\n              </ng-container>\\n           \\n              <ng-container matColumnDef=\\\"delete\\\">\\n                  <th mat-header-cell *matHeaderCellDef> Delete </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\">\\n                    <button mat-icon-button color=\\\"warn\\\" (click)=\\\"redirectToDelete()\\\">\\n                        <mat-icon class=\\\"mat-18\\\">delete</mat-icon>\\n                    </button>\\n                  </td>\\n                </ng-container>\\n           \\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n          </table> -->\\n\\n          <!----------------------------------------------------------------------->\\n\\n          <mat-form-field>\\n                <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n              </mat-form-field>\\n         <div style=\\\"margin-left:2%;width: 99%;\\\" class=\\\"mat-elevation-z8\\\">\\n          <mat-table [dataSource]=\\\"dataSource\\\" matSort *ngIf=\\\"CustomerDetails\\\">\\n                <!-- Checkbox Column -->\\n  <ng-container matColumnDef=\\\"select\\\" style=\\\"max-width: 50px\\\">\\n    <mat-header-cell *matHeaderCellDef>\\n      <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\n                    [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\n                    [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\"\\n                    [aria-label]=\\\"checkboxLabel()\\\">\\n      </mat-checkbox>\\n    </mat-header-cell>\\n    <mat-cell *matCellDef=\\\"let row\\\">\\n      <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\n                    (change)=\\\"$event ? selection.toggle(row) : null\\\"\\n                    [checked]=\\\"selection.isSelected(row)\\\"\\n                    [aria-label]=\\\"checkboxLabel(row)\\\">\\n      </mat-checkbox>\\n    </mat-cell>\\n  </ng-container>\\n\\n    <ng-container matColumnDef=\\\"Image\\\">\\n               <mat-header-cell *matHeaderCellDef > Image</mat-header-cell>\\n               <mat-cell *matCellDef=\\\"let user\\\">\\n                    <img src=\\\"../../../assets/no-photo.png\\\"  style=\\\"width:60px;width:60px;margin:5% 5% 5% 5%\\\"> \\n               </mat-cell>\\n             </ng-container>\\n\\n            <ng-container matColumnDef=\\\"Name\\\" >\\n              <mat-header-cell *matHeaderCellDef mat-sort-header><h5><b> Contact Name </b></h5> </mat-header-cell>    \\n              <mat-cell *matCellDef=\\\"let user\\\" >\\n                    <!-- <img src=\\\"../../../assets/men.jpg\\\"  style=\\\"width:40px;width:40px;margin:5% 5% 5% 5%\\\">  -->\\n                {{user.Name  | titlecase}}\\n                </mat-cell>\\n            </ng-container>\\n            <!-- <ng-container matColumnDef=\\\"email\\\">\\n               <mat-header-cell *matHeaderCellDef mat-sort-header>Email Address</mat-header-cell>\\n               <mat-cell *matCellDef=\\\"let user\\\">{{user.email}}</mat-cell>\\n             </ng-container> -->\\n             <ng-container matColumnDef=\\\"Mobile\\\">\\n                 <mat-header-cell *matHeaderCellDef mat-sort-header> <h5><b>Mobile No</b></h5></mat-header-cell>\\n                 <mat-cell *matCellDef=\\\"let user\\\">{{user.Mobile}}</mat-cell>\\n               </ng-container>\\n\\n               <ng-container matColumnDef=\\\"Age\\\">\\n                    <mat-header-cell *matHeaderCellDef mat-sort-header><h5><b>Age</b></h5></mat-header-cell>\\n                    <mat-cell *matCellDef=\\\"let user\\\">{{user.Age}}</mat-cell>\\n                  </ng-container>\\n\\n                  <ng-container matColumnDef=\\\"City\\\">\\n                        <mat-header-cell *matHeaderCellDef mat-sort-header><h5><b>City</b></h5></mat-header-cell>\\n                        <mat-cell *matCellDef=\\\"let user\\\">{{user.City}}</mat-cell>\\n                      </ng-container>\\n    \\n                      <ng-container matColumnDef=\\\"Domicile\\\">\\n                            <mat-header-cell *matHeaderCellDef mat-sort-header><h5><b>Demicile</b></h5></mat-header-cell>\\n                            <mat-cell *matCellDef=\\\"let user\\\">{{user.Domicile}}</mat-cell>\\n                          </ng-container>\\n\\n\\n               <ng-container matColumnDef=\\\"Details\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header><h5><b>Call</b></h5></mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let user;let i = index;\\\">\\n                    <!-- <button mat-icon-button color=\\\"primary\\\" (click)=\\\"redirectToDetails()\\\">\\n                        <mat-icon class=\\\"mat-18\\\">reorder</mat-icon>\\n                    </button> -->\\n                    <button mat-icon-button color=\\\"primary\\\" style=\\\"color:green;background-color: lightgray\\\"  (click)=\\\"redirectToDetails(user.Name, user.Mobile)\\\">\\n                            <!-- <mat-icon class=\\\"mat-18\\\">reorder</mat-icon> -->\\n                            <!-- <mat-icon> call</mat-icon> -->\\n                            <mat-icon> dialer_sip</mat-icon>                       \\n                       </button>\\n                </mat-cell>\\n              </ng-container>\\n               <!-- <ng-container matColumnDef=\\\"edit\\\">\\n                   <mat-header-cell *matHeaderCellDef>Edit</mat-header-cell>\\n                   <mat-cell *matCellDef=\\\"let user\\\">\\n                    <button mat-icon-button color=\\\"accent\\\" (click)=\\\"redirectToUpdate()\\\">\\n                        <mat-icon class=\\\"mat-18\\\">system_update</mat-icon>\\n                    </button>\\n                   </mat-cell>\\n                 </ng-container>\\n                 <ng-container matColumnDef=\\\"delete\\\">\\n                    <mat-header-cell *matHeaderCellDef>Delete</mat-header-cell>\\n                    <mat-cell *matCellDef=\\\"let user\\\">\\n                        <button mat-icon-button color=\\\"warn\\\" (click)=\\\"redirectToDelete()\\\">\\n                            <mat-icon class=\\\"mat-18\\\">delete</mat-icon>\\n                        </button>\\n                    </mat-cell>\\n                  </ng-container> -->\\n         \\n               <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\">\\n               </mat-header-row>\\n               <mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\" ></mat-row>\\n          </mat-table>\\n          <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\n           </div>\\n          <!----------------------->\\n        </div>\\n        <div class=\\\"col-sm-4\\\">\\n            <!-- <ejs-schedule [eventSettings]=\\\"eventData\\\" [selectedDate]=\\\"currentDate\\\" [currentView]=\\\"newViewMode\\\">\\n            </ejs-schedule> -->\\n            <app-calendar></app-calendar>\\n        </div>\\n    </div>\\n   \\n</div>\\n\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { EventSettingsModel, View } from '@syncfusion/ej2-angular-schedule';\n// import { MaterialModule } from '../../material/material.module';\nimport { MatTableDataSource } from '@angular/material';\nimport {MatPaginator} from '@angular/material/paginator';\nimport { AutoDialService } from '../../../autoDialer.service';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {MatSort} from '@angular/material/sort';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { CallDialogComponent } from '../../call-dialog/call-dialog.component';\n\n@Component({\n \n  selector: 'app-phoneBook',\n  templateUrl: './phoneBook.component.html',\n  styleUrls: ['./phoneBook.component.css']\n})\nexport class PhoneBookComponent implements OnInit{\n  selection = new SelectionModel(true, []);\n  constructor(private breakpointObserver: BreakpointObserver, private service: AutoDialService, public dialog: MatDialog) {}\n\n  CustomerDetails;\n  dataSource; \n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n \n\n  ngOnInit() {\n    this.service.getAllCustomer().subscribe((data)=>{\n      console.log('data:',data);\n      this.CustomerDetails = data['message'];\n      //this.dataSource =this.CustomerDetails;\n      this.dataSource = new MatTableDataSource(this.CustomerDetails);\n       // Assign the paginator *after* dataSource is set\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n    })\n  }\n\n  title = 'calender';\n  public currentDate: Date = new Date(2019, 6, 5);\n  public newViewMode: View = 'Month';\n\n    // dummyData = this.service.getDummyData();\n    // displayDummyData = [  'Name', 'Age', 'DOB', 'Mobile', 'Domicile', 'City']\n   // data = this.service.getUsers();\n // dataSource = new MatTableDataSource(this.CustomerDetails);\n  // displayedColumns = ['select','name','email','phone', 'details','edit', 'delete'];\n  displayedColumns = ['select','Image','Name','Mobile','Age', 'City','Domicile', 'Details'];\n\n  // dataSource = this.service.getAllCustomer();\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n \n  }\n\n \n    /** Whether the number of selected elements matches the total number of rows. */\n    isAllSelected() {\n      const numSelected = this.selection.selected.length;\n      const numRows = this.dataSource.data.length;\n      return numSelected === numRows;\n    }\n  \n    /** Selects all rows if they are not all selected; otherwise clear selection. */\n    masterToggle() {\n      this.isAllSelected() ?\n          this.selection.clear() :\n          this.dataSource.data.forEach(row => this.selection.select(row));\n    }\n  \n    /** The label for the checkbox on the passed row */\n    checkboxLabel(row?): string {\n      if (!row) {\n        return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n      }\n      return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n    }\n\n    //--------------------------------------------------------------Bussiness Logic -------------------------------------------------------\n    payload;\n    redirectToDetails(Name, Mobile){\n     // alert(Id);\n      this.payload = {\n        message: 'Login Error',\n        error: 'error',\n        name: Name,\n        mobile: Mobile,\n        image: 'image_url'\n      }\n      this.openDialog(this.payload );\n    }\n\n    openDialog(payload): void {\n      console.log(payload);\n      const dialogRef = this.dialog.open(CallDialogComponent, {\n        width: '550px',\n        data: { message: payload.message,error: payload.error,\n                name:payload.name, mobile: payload.mobile, image: payload.image\n        },\n      });\n  \n      dialogRef.afterClosed().subscribe(result => {\n        console.log('The dialog was closed');\n        console.log(result);\n      });\n\n    }\n\n    \n  \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms'\nimport { PhoneBookRoutingModule } from './phoneBook-routing.module';\nimport { PhoneBookComponent } from './phoneBook.component';\nimport { MaterialModule } from '../../../material/material.module';\nimport {ScheduleModule, AgendaService, DayService, DragAndDropService, ResizeService, WeekService, WorkWeekService, MonthService } from '@syncfusion/ej2-angular-schedule';\n//import {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n//For Calendar\n//import { CalendarModule } from './calendar/calendar.module';\nimport { CalendarComponent } from './calendar/calendar.component'\nimport 'hammerjs';\n\n//For calendar\nimport { FullCalendarModule } from '@fullcalendar/angular';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n  //      BrowserAnimationsModule,\n        MaterialModule,\n        PhoneBookRoutingModule,\n        ScheduleModule,\n        FullCalendarModule,\n      //  CalendarModule\n    ],\n    providers: [AgendaService, DayService, WeekService, WorkWeekService, MonthService, DragAndDropService, ResizeService],\n    declarations: [PhoneBookComponent, CalendarComponent]\n})\nexport class PhoneBookModule {}\n"],"sourceRoot":""}