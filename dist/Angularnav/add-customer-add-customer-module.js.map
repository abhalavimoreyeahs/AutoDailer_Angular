{"version":3,"sources":["webpack:///./src/app/agent/add-customer/add-customer-routing.ts","webpack:///./src/app/agent/add-customer/add-customer.component.css","webpack:///./src/app/agent/add-customer/add-customer.component.html","webpack:///./src/app/agent/add-customer/add-customer.component.ts","webpack:///./src/app/agent/add-customer/add-customer.module.ts","webpack:///./src/app/shared/services/agent.ts"],"names":[],"mappings":"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","file":"add-customer-add-customer-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AddCustomerComponent } from './add-customer.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: AddCustomerComponent,\r\n        // children: [\r\n        //     { path: '', redirectTo: 'adminDashboard', pathMatch: 'prefix' },\r\n        //     { path: 'adminDashboard', loadChildren: './admin/adminDashboard.module#AdminDashboardModule' },\r\n        //     { path: 'employee', loadChildren: './onBoardEmployee/employee.module#EmployeeModule'},\r\n        //     { path: 'campaign', loadChildren: './campaign/campaign.module#CampaignModule'},\r\n        // ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AddCustomerRoutingModule {}\r\n","module.exports = \".wide{\\r\\n    width: 65%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWdlbnQvYWRkLWN1c3RvbWVyL2FkZC1jdXN0b21lci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksVUFBVTtBQUNkIiwiZmlsZSI6InNyYy9hcHAvYWdlbnQvYWRkLWN1c3RvbWVyL2FkZC1jdXN0b21lci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLndpZGV7XHJcbiAgICB3aWR0aDogNjUlO1xyXG59Il19 */\"","module.exports = \"<div style=\\\"background-color: #ecf0f5;\\\">\\n<div class=\\\"container\\\" style=\\\"padding:2% 2% 2% 2%;background-color:  #fff;\\\">\\n    <form class=\\\"form\\\" style=\\\"text-align:center\\\">\\n        <div class=\\\"form-body\\\">\\n          <h4 class=\\\"form-section\\\" style=\\\"text-align:center;padding:3%\\\" ><i class=\\\"ft-user\\\"></i> Add Customer</h4>\\n          <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n      \\n                  <mat-form-field class=\\\"wide\\\">\\n                    <mat-label>Customer Name :</mat-label>\\n               \\n                    <input matInput [(ngModel)]=\\\"addCustomer.name\\\" name=\\\"name\\\" required>                \\n                  </mat-form-field>\\n                </div>\\n                <div class=\\\"col\\\">\\n        \\n                  <mat-form-field class=\\\"wide\\\">\\n                    <mat-label>Customer Phone Number</mat-label>\\n                  \\n                    <input matInput placeholder=\\\"Caller Name\\\"  [(ngModel)]=\\\"addCustomer.mobile\\\" name=\\\"mobile\\\" [value]=\\\"\\\" required>\\n                  </mat-form-field>\\n                </div>\\n              </div>\\n              <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-6\\\">\\n          \\n                      <mat-form-field class=\\\"wide\\\">\\n                        <mat-label>Date of Birth</mat-label>\\n                        <input matInput [matDatepicker]=\\\"picker\\\" [(ngModel)]=\\\"addCustomer.dob\\\" name=\\\"dob\\\" placeholder=\\\"Choose a date\\\">\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                        <mat-datepicker #picker></mat-datepicker>                     \\n                      </mat-form-field >\\n                    </div>\\n                    <div class=\\\"col-md-6\\\">\\n                  \\n                    <mat-form-field class=\\\"wide\\\">\\n                            <mat-label>Address</mat-label>\\n                            <input matInput  [(ngModel)]=\\\"addCustomer.address\\\" name=\\\"address\\\" required >  \\n                             <!-- <mat-select  (ngModelChange)=\\\"onChange($event)\\\" required>\\n                                <mat-option *ngFor=\\\"let item of Agent\\\" [value]=\\\"item.value\\\">\\n                                  {{item.name}}\\n                                </mat-option>\\n                              </mat-select> -->\\n                   </mat-form-field>\\n                    </div>\\n                  </div>\\n\\n          <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\" style=\\\"padding-left:10%; padding-right:10%\\\">\\n          <mat-form-field style=\\\"width:100%\\\">\\n            <mat-label>Email</mat-label>\\n            <input matInput [(ngModel)]=\\\"addCustomer.email\\\" name=\\\"email\\\" required >  \\n            <!-- <textarea matInput placeholder=\\\"Leave a comment\\\"   value=\\\"\\\" required></textarea>                            -->\\n          </mat-form-field>\\n        </div>\\n          </div>\\n  \\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n  \\n              <mat-form-field class=\\\"wide\\\">\\n                <mat-label>Last contacted :</mat-label>\\n           \\n                <input matInput [(ngModel)]=\\\"addCustomer.lastContacted\\\" name=\\\"lastContacted\\\" required>                \\n              </mat-form-field>\\n            </div>\\n            <div class=\\\"col\\\">\\n    \\n              <mat-form-field class=\\\"wide\\\">\\n                <mat-label>Last Customer Status</mat-label>\\n              \\n                <mat-select [(ngModel)]=\\\"addCustomer.lastCustomerStatus\\\" name=\\\"lastCustomerStatus\\\"  required>\\n                    <mat-option *ngFor=\\\"let item of Agent\\\" [value]=\\\"item.value\\\">\\n                      {{item.name}}\\n                    </mat-option>\\n                  </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n              <div class=\\\"col\\\">\\n    \\n                <mat-form-field class=\\\"wide\\\">\\n                  <mat-label>Registration Status :</mat-label>\\n             \\n                  <mat-select  [(ngModel)]=\\\"addCustomer.registrationStatus\\\" name=\\\"registrationStatus\\\" required>\\n                      <mat-option *ngFor=\\\"let item of RegistrationStatus\\\" [value]=\\\"item.value\\\">\\n                        {{item.name}}\\n                      </mat-option>\\n                    </mat-select>           \\n                </mat-form-field>\\n              </div>\\n              <div class=\\\"col\\\">\\n      \\n                <mat-form-field class=\\\"wide\\\">\\n                  <mat-label>Success Rate Potential</mat-label>\\n                  <mat-select  [(ngModel)]=\\\"addCustomer.successRate\\\" name=\\\"successRate\\\" required>\\n                      <mat-option *ngFor=\\\"let item of SuccessRate\\\" [value]=\\\"item.value\\\">\\n                        {{item.name}}\\n                      </mat-option>\\n                    </mat-select>\\n                  <!-- <input matInput placeholder=\\\"Caller Name\\\"  [value]=\\\"\\\" required> -->\\n                </mat-form-field>\\n              </div>\\n            </div>\\n         \\n        </div>\\n\\n        <div class=\\\"form-actions\\\" style=\\\"padding:3%\\\">\\n                <button mat-button  cdkFocusInitial class=\\\"mat-raised-button mat-primary\\\"\\n                style=\\\"width:100px\\\" (click)=\\\"submit()\\\">Submit</button>\\n        \\n        </div>\\n      </form>\\n</div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AgentService } from '../../shared/services/agent';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-add-customer',\n  templateUrl: './add-customer.component.html',\n  styleUrls: ['./add-customer.component.css']\n})\nexport class AddCustomerComponent implements OnInit {\n\n  addCustomer ={}\n  constructor(private agentService:AgentService, private toastrService: ToastrService) { }\n\n  ngOnInit() {\n  }\n\n  Agent =[\n    {value:0, name: \"Deal done\"},\n    {value:1, name: \"Introduction calls\"},\n    {value:2, name: \"Follow up calls\"},\n   //{value:3, name: \"Deal done\"},\n    {value:3, name: \"Callback\"},\n    {value:4, name: \"Voicemail\"},\n    {value:5, name: \"Blacklist\"},\n    {value:6, name: \"Number does not match\"},\n    {value:7, name: \"Underage\"},\n    {value:8, name: \"Duplicate\"},\n  ]\n\n  SuccessRate =[\n    {value: 0, name: \"low\"} ,\n    {value: 1, name: \"medium\"},\n    {value: 2, name: \"high\"} //low medium high\n  ]\n\n  RegistrationStatus =[\n    {value: 0, name: \"lead\"} ,\n    {value: 1, name: \"demo\"} ,\n    {value: 2, name: \"real\"} \n  ]\n\n  submit(){\n    //alert('submit')\n    console.log(this.addCustomer);\n    this.agentService.addCustomerByAgent(this.addCustomer).subscribe((data)=>{\n      console.log(data);\n      this.showToaster();\n      this.addCustomer ={}\n    })\n  }\n\n    //notification\n    showToaster(){\n      this.toastrService.success('Data saved Successfully');\n    }\n    ErrorSuccess(){\n      this.toastrService.error('unsuccessful');\n    }\n    infoSuccess(){\n      this.toastrService.info('info msg','Info!');\n    }\n    warningSuccess(){\n      this.toastrService.warning('this is warning');\n    }\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms'\r\nimport { AddCustomerRoutingModule } from './add-customer-routing';\r\nimport { AddCustomerComponent } from './add-customer.component';\r\nimport { MaterialModule } from '../../material/material.module';\r\n// import { ToastrModule } from 'ngx-toastr';\r\n//import {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport 'hammerjs';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n  //      BrowserAnimationsModule,\r\n        MaterialModule,\r\n        AddCustomerRoutingModule,\r\n        // ToastrModule.forRoot({\r\n        //     timeOut: 2500,\r\n        //     positionClass: 'toast-top-right',\r\n        //     preventDuplicates:false\r\n        //   }),\r\n    ],\r\n    declarations: [AddCustomerComponent]\r\n})\r\nexport class AddCustomerModule {}\r\n","import { Injectable, ɵConsole } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AgentService {\n    apiURL: string;\n\n    constructor(private http: HttpClient) {\n        this.apiURL = environment.apiURL;\n    }\n\n\n    sendAgentStatus(data) {\n        return this.http.put(this.apiURL + '/v0.1/agentCurrentStatus', data);\n    }\n\n    getCallDetails(uuid) {\n        return this.http.post(this.apiURL + '/v0.1/getInfoaftercallTerminated', uuid);\n    }\n\n    sendCustomerFeedback(feedback) {\n        return this.http.post(this.apiURL + '/v0.1/AgentSubmitFeedback', feedback);\n    }\n\n    getScheduledCallForAgent(agentId) {\n        return this.http.get(this.apiURL + `/v0.1/getScheduleCallForAgent?agentid=${agentId['agentid']}`);\n    }\n\n    getMyAllNotes(){\n        return this.http.get(this.apiURL + '/v0.1/getAgentNotes');\n    }\n\n    setAgentStatusTime(data){\n        return this.http.post(this.apiURL + '/v0.1/saveAgentStatusTime', data);\n    }\n\n    // Agent Dashboard \n    getAgentCallStatus(data){\n        return this.http.post(this.apiURL + '/v0.1/getIndividualAgentCallDetails' ,data);\n    }\n    addCustomerByAgent(data){\n        return this.http.post(this.apiURL + '/v0.1/addCustomer', data);\n    }\n\n    getCallRelatedRecords(data){\n        return this.http.get(this.apiURL + `/v0.1/getParentAndChildScheduleCalls?recordid=${data}`);\n    }\n}\n"],"sourceRoot":""}