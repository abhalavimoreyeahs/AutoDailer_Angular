{"version":3,"sources":["webpack:///./src/app/agent/status/break/break-dialogBox.html","webpack:///./src/app/agent/status/break/break-reason.html","webpack:///./src/app/agent/status/break/break-routing.module.ts","webpack:///./src/app/agent/status/break/break.component.css","webpack:///./src/app/agent/status/break/break.component.html","webpack:///./src/app/agent/status/break/break.component.ts","webpack:///./src/app/agent/status/break/break.module.ts"],"names":[],"mappings":"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","file":"status-break-break-module.js","sourcesContent":["module.exports = \"\\r\\n<h2 mat-dialog-title style=\\\"text-align: center\\\">On Break</h2>\\r\\n<mat-dialog-content style=\\\"text-align: center\\\">\\r\\n        <mat-form-field>\\r\\n                <mat-label>Change Status</mat-label>\\r\\n                 <mat-select [(ngModel)]=\\\"select\\\" >\\r\\n                        <mat-option  [value]=\\\"0\\\"  [(ngModel)]=\\\"data.value\\\" name=\\\"value\\\"> Active </mat-option>\\r\\n                        <mat-option  [value]=\\\"1\\\"   [(ngModel)]=\\\"data.value\\\" name=\\\"value\\\"> Manual </mat-option>\\r\\n                 </mat-select>\\r\\n       </mat-form-field>   \\r\\n        <!-- <div class=\\\"row\\\">\\r\\n                <div class=\\\"col\\\" style=\\\"margin-left:5%\\\">\\r\\n                        <mat-form-field>\\r\\n                                <mat-label>Caller Name</mat-label>\\r\\n                                <input  matInput  placeholder=\\\"Caller Name\\\" style=\\\"max-width: 100px\\\" [(ngModel)]=\\\"data.name\\\" name=\\\"name\\\" [value]=\\\"\\\" required>                      \\r\\n                       </mat-form-field><br>\\r\\n                       <mat-form-field *ngIf=\\\"select\\\">\\r\\n                            <mat-label>CallBack Date</mat-label>\\r\\n                            <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\" [(ngModel)]=\\\"data.startdate\\\"  name=\\\"startdate\\\">\\r\\n                            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\" (click)=\\\"selectDate(startdate)\\\"></mat-datepicker-toggle>\\r\\n                            <mat-datepicker #picker></mat-datepicker>   \\r\\n                    </mat-form-field>                  \\r\\n                </div>\\r\\n                <div class=\\\"col\\\">                  \\r\\n                        <mat-form-field>\\r\\n                                <mat-label>Change Status</mat-label>\\r\\n                                 <mat-select [(ngModel)]=\\\"select\\\" >\\r\\n                                        <mat-option  [value]=\\\"0\\\"> Active </mat-option>\\r\\n                                        <mat-option  [value]=\\\"1\\\"> Manual </mat-option>\\r\\n                                 </mat-select>\\r\\n                       </mat-form-field>                            \\r\\n                </div>\\r\\n              </div> -->\\r\\n</mat-dialog-content>\\r\\n\\r\\n<mat-dialog-actions style=\\\"text-align:center;display: flex;justify-content: center;\\\">\\r\\n    <!-- <button mat-button (click)=\\\"onNoClick()\\\" class=\\\"mat-raised-button\\\" style=\\\"width:100px\\\">No Thanks</button> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -->\\r\\n    <button mat-button [mat-dialog-close]=\\\"data\\\" cdkFocusInitial class=\\\"mat-raised-button mat-primary\\\" style=\\\"width:100px\\\">Ok</button>\\r\\n</mat-dialog-actions>\"","module.exports = \"\\r\\n<h2 mat-dialog-title style=\\\"text-align: center\\\">Break Reason</h2>\\r\\n<mat-dialog-content style=\\\"text-align:center\\\">\\r\\n        <!-- <div class=\\\"row\\\"> -->\\r\\n\\r\\n                <mat-form-field >\\r\\n                        <mat-label>Break Reason</mat-label>\\r\\n                        <input   matInput  placeholder=\\\"Caller Name\\\" style=\\\"max-width: 100px\\\" [(ngModel)]=\\\"data.reason\\\" name=\\\"reason\\\" [value]=\\\"\\\" required>                      \\r\\n               </mat-form-field> <br>\\r\\n                <!-- <div class=\\\"col\\\" style=\\\"margin-left:5%\\\">\\r\\n                        <mat-form-field>\\r\\n                                <mat-label>Caller Name</mat-label>\\r\\n                                <input  matInput  placeholder=\\\"Caller Name\\\" style=\\\"max-width: 100px\\\" [(ngModel)]=\\\"data.name\\\" name=\\\"name\\\" [value]=\\\"\\\" required>                      \\r\\n                       </mat-form-field><br>\\r\\n                       <mat-form-field *ngIf=\\\"select\\\">\\r\\n                            <mat-label>CallBack Date</mat-label>\\r\\n                            <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\" [(ngModel)]=\\\"data.startdate\\\"  name=\\\"startdate\\\">\\r\\n                            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\" (click)=\\\"selectDate(startdate)\\\"></mat-datepicker-toggle>\\r\\n                            <mat-datepicker #picker></mat-datepicker>   \\r\\n                    </mat-form-field>                  \\r\\n                </div>\\r\\n                <div class=\\\"col\\\">                  \\r\\n                        <mat-form-field>\\r\\n                                <mat-label>Customer Interested</mat-label>\\r\\n                                 <mat-select [(ngModel)]=\\\"select\\\">\\r\\n                                        <mat-option  [value]=\\\"0\\\"> Active </mat-option>\\r\\n                                        <mat-option  [value]=\\\"1\\\"> Manual </mat-option>\\r\\n                                 </mat-select>\\r\\n                       </mat-form-field>                            \\r\\n                </div> -->\\r\\n              <!-- </div> -->\\r\\n</mat-dialog-content>\\r\\n\\r\\n<mat-dialog-actions style=\\\"text-align:center;display: flex;justify-content: center;\\\">\\r\\n    <!-- <button mat-button (click)=\\\"onNoClick()\\\" class=\\\"mat-raised-button\\\" style=\\\"width:100px\\\">No Thanks</button> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -->\\r\\n    <button mat-button [mat-dialog-close]=\\\"data\\\" cdkFocusInitial class=\\\"mat-raised-button mat-primary\\\" style=\\\"width:100px\\\">Submit</button>\\r\\n</mat-dialog-actions>\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BreakComponent } from './break.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: BreakComponent,\r\n        // children: [\r\n        //     { path: '', redirectTo: 'adminDashboard', pathMatch: 'prefix' },\r\n        //     { path: 'adminDashboard', loadChildren: './admin/adminDashboard.module#AdminDashboardModule' },\r\n        //     { path: 'employee', loadChildren: './onBoardEmployee/employee.module#EmployeeModule'},\r\n        //     { path: 'campaign', loadChildren: './campaign/campaign.module#CampaignModule'},\r\n        // ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class BreakRoutingModule {}\r\n","module.exports = \"body {\\r\\n  /* background-image: url('../../../../assets/autodial_img-1-01.jpeg');\\r\\n  background-repeat:no-repeat;\\r\\n position: relative;\\r\\n  background-size: 100%;\\r\\n  background-position-x: 100%;\\r\\n  background-position-y: 120%;\\r\\n  height:100%; \\r\\n opacity: 0.9; */\\r\\n \\r\\n  /* Full height */\\r\\n  height: 100%; \\r\\n  background-image: url('autodial_img-1-01.jpeg');\\r\\n  /* Center and scale the image nicely */\\r\\n  background-position: center;\\r\\n  background-repeat: no-repeat;\\r\\n  background-size: cover;\\r\\n  opacity: 0.9;\\r\\n}\\r\\n\\r\\n.grid-container {\\r\\n    margin: 20px;\\r\\n  }\\r\\n\\r\\n.dashboard-card {\\r\\n    position: absolute;\\r\\n    top: 15px;\\r\\n    left: 15px;\\r\\n    right: 15px;\\r\\n    bottom: 15px;\\r\\n  }\\r\\n\\r\\n.more-button {\\r\\n    position: absolute;\\r\\n    top: 5px;\\r\\n    right: 10px;\\r\\n  }\\r\\n\\r\\n.dashboard-card-content {\\r\\n    text-align: center;\\r\\n  }\\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWdlbnQvc3RhdHVzL2JyZWFrL2JyZWFrLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRTs7Ozs7OztnQkFPYzs7RUFFZCxnQkFBZ0I7RUFDaEIsWUFBWTtFQUNaLCtDQUFrRTtFQUNsRSxzQ0FBc0M7RUFDdEMsMkJBQTJCO0VBQzNCLDRCQUE0QjtFQUM1QixzQkFBc0I7RUFDdEIsWUFBWTtBQUNkOztBQUVBO0lBQ0ksWUFBWTtFQUNkOztBQUVBO0lBQ0Usa0JBQWtCO0lBQ2xCLFNBQVM7SUFDVCxVQUFVO0lBQ1YsV0FBVztJQUNYLFlBQVk7RUFDZDs7QUFFQTtJQUNFLGtCQUFrQjtJQUNsQixRQUFRO0lBQ1IsV0FBVztFQUNiOztBQUVBO0lBQ0Usa0JBQWtCO0VBQ3BCIiwiZmlsZSI6InNyYy9hcHAvYWdlbnQvc3RhdHVzL2JyZWFrL2JyZWFrLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJib2R5IHtcclxuICAvKiBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uLy4uLy4uLy4uL2Fzc2V0cy9hdXRvZGlhbF9pbWctMS0wMS5qcGVnJyk7XHJcbiAgYmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O1xyXG4gcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGJhY2tncm91bmQtc2l6ZTogMTAwJTtcclxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uLXg6IDEwMCU7XHJcbiAgYmFja2dyb3VuZC1wb3NpdGlvbi15OiAxMjAlO1xyXG4gIGhlaWdodDoxMDAlOyBcclxuIG9wYWNpdHk6IDAuOTsgKi9cclxuIFxyXG4gIC8qIEZ1bGwgaGVpZ2h0ICovXHJcbiAgaGVpZ2h0OiAxMDAlOyBcclxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uLy4uLy4uLy4uL2Fzc2V0cy9hdXRvZGlhbF9pbWctMS0wMS5qcGVnJyk7XHJcbiAgLyogQ2VudGVyIGFuZCBzY2FsZSB0aGUgaW1hZ2UgbmljZWx5ICovXHJcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xyXG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICBvcGFjaXR5OiAwLjk7XHJcbn1cclxuXHJcbi5ncmlkLWNvbnRhaW5lciB7XHJcbiAgICBtYXJnaW46IDIwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5kYXNoYm9hcmQtY2FyZCB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDE1cHg7XHJcbiAgICBsZWZ0OiAxNXB4O1xyXG4gICAgcmlnaHQ6IDE1cHg7XHJcbiAgICBib3R0b206IDE1cHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5tb3JlLWJ1dHRvbiB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDVweDtcclxuICAgIHJpZ2h0OiAxMHB4O1xyXG4gIH1cclxuICBcclxuICAuZGFzaGJvYXJkLWNhcmQtY29udGVudCB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgfVxyXG4gICJdfQ== */\"","module.exports = \"<body></body>\"","import { Component, Inject} from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\r\nimport { AutoDialService } from '../../../autoDialer.service';\r\n//Dialog Box\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\n\r\nexport interface DialogData {\r\n  animal: string;\r\n  name: string;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-break',\r\n  templateUrl: './break.component.html',\r\n  styleUrls: ['./break.component.css']\r\n})\r\nexport class BreakComponent {\r\n  /** Based on the screen size, switch from standard to one column per row */\r\n\r\nCall;\r\nNumber;\r\n  constructor(private breakpointObserver: BreakpointObserver, private dialog: MatDialog, private service : AutoDialService) {\r\n    this.openReasonDialog();\r\n    let agentId =  localStorage.getItem('PlivoUserId');\r\n    agentId = agentId.concat('@phone.plivo.com');\r\n     let Ojb = {status:\"break\",\r\n     currentstatus: \"notOnCall\",\r\n     sipendpoint: agentId\r\n   }\r\n    this.service.sendAgentStatus(Ojb).subscribe((data)=>{\r\n      console.log(data);\r\n    })\r\n  }\r\n\r\n   //Dialog function\r\n openDialog(): void {\r\n  console.log(this.Call);\r\nconst dialogRef = this.dialog.open(BreakDialogComponent, {\r\n  width: '550px',\r\n  data: { number: this.Number},\r\n  disableClose: true \r\n});\r\n\r\ndialogRef.afterClosed().subscribe(result => {\r\n  console.log('The dialog was closed');\r\n  console.log(result);\r\n});\r\n\r\n}\r\n\r\n//Break Reason\r\n  //Dialog function\r\n  openReasonDialog(): void {\r\n    console.log(this.Call);\r\n  const dialogRef = this.dialog.open(BreakReasonComponent, {\r\n    width: '550px',\r\n    data: { number: this.Number},\r\n    disableClose: true \r\n  });\r\n  \r\n  dialogRef.afterClosed().subscribe(result => {\r\n    console.log('The dialog was closed');\r\n    console.log(result);\r\n    this.openDialog();\r\n  });\r\n \r\n  }\r\n}\r\n\r\n\r\n//Dialog Box\r\n//dialog box 2\r\n@Component({\r\n  selector: 'breakReason',\r\n  templateUrl: 'break-reason.html',\r\n})\r\nexport class BreakReasonComponent {\r\n  select;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<BreakReasonComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  cancel(){\r\n\r\n  }\r\n  ok(){\r\n    this.dialogRef.close(\"can pass string\");\r\n    //save the doc\r\n  }\r\n\r\n}\r\n\r\n//Dialog Box\r\n//dialog box 2\r\n@Component({\r\n  selector: 'breakDialog',\r\n  templateUrl: 'break-dialogBox.html',\r\n})\r\nexport class BreakDialogComponent {\r\n  select;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<BreakDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  cancel(){\r\n\r\n  }\r\n  ok(){\r\n    this.dialogRef.close(\"can pass string\");\r\n    //save the doc\r\n  }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms'\r\nimport { BreakRoutingModule } from './break-routing.module';\r\nimport { BreakComponent, BreakDialogComponent, BreakReasonComponent } from './break.component';\r\nimport { MaterialModule } from '../../../material/material.module';\r\n\r\n//import {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport 'hammerjs';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n  //      BrowserAnimationsModule,\r\n        MaterialModule,\r\n        BreakRoutingModule,\r\n      \r\n    ],\r\n    entryComponents:[\r\n        BreakComponent, BreakDialogComponent, BreakReasonComponent\r\n       ],\r\n    declarations: [BreakComponent, BreakDialogComponent, BreakReasonComponent]\r\n})\r\nexport class BreakModule {}\r\n"],"sourceRoot":""}