{"version":3,"sources":["webpack:///./src/app/agent/calendar/calendar/calendar.component.css","webpack:///./src/app/agent/calendar/calendar/calendar.component.html","webpack:///./src/app/agent/calendar/calendar/calendar.component.ts","webpack:///./src/app/agent/calendar/view-routing.module.ts","webpack:///./src/app/agent/calendar/view.component.css","webpack:///./src/app/agent/calendar/view.component.html","webpack:///./src/app/agent/calendar/view.component.ts","webpack:///./src/app/agent/calendar/view.module.ts"],"names":[],"mappings":"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","file":"calendar-view-module.js","sourcesContent":["module.exports = \"\\r\\n.app-top {\\r\\n  margin: 0 0 3em;\\r\\n}\\r\\n\\r\\n.app-calendar {\\r\\n  margin: 0 auto;\\r\\n  max-width: 900px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWdlbnQvY2FsZW5kYXIvY2FsZW5kYXIvY2FsZW5kYXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7RUFDRSxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsY0FBYztFQUNkLGdCQUFnQjtBQUNsQiIsImZpbGUiOiJzcmMvYXBwL2FnZW50L2NhbGVuZGFyL2NhbGVuZGFyL2NhbGVuZGFyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLmFwcC10b3Age1xyXG4gIG1hcmdpbjogMCAwIDNlbTtcclxufVxyXG5cclxuLmFwcC1jYWxlbmRhciB7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbiAgbWF4LXdpZHRoOiA5MDBweDtcclxufVxyXG5cclxuXHJcbiJdfQ== */\"","module.exports = \"\\r\\n<div class='app'>\\r\\n  <div class='app-calendar' *ngIf=\\\"calendarVisible\\\">\\r\\n    <full-calendar\\r\\n      #calendar\\r\\n      defaultView=\\\"dayGridMonth\\\"\\r\\n      [header]=\\\"{\\r\\n        left: 'prev,next today',\\r\\n        center: 'title',\\r\\n        right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\\r\\n      }\\\"\\r\\n      [plugins]=\\\"calendarPlugins\\\"\\r\\n      [weekends]=\\\"calendarWeekends\\\"\\r\\n      [events]=\\\"calendarEvents\\\"\\r\\n      (dateClick)=\\\"handleDateClick($event)\\\"\\r\\n    ></full-calendar>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, ViewChild } from '@angular/core';\r\nimport { FullCalendarComponent } from '@fullcalendar/angular';\r\nimport { EventInput } from '@fullcalendar/core';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGrigPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin from '@fullcalendar/interaction'; // for dateClick\r\n\r\n@Component({\r\n  selector: 'app-calendar',\r\n  templateUrl: './calendar.component.html',\r\n  styleUrls: ['./calendar.component.css']\r\n})\r\nexport class CalendarComponent {\r\n\r\n  @ViewChild('calendar') calendarComponent: FullCalendarComponent; // the #calendar in the template\r\n\r\n  calendarVisible = true;\r\n  calendarPlugins = [dayGridPlugin, timeGrigPlugin, interactionPlugin];\r\n  calendarWeekends = true;\r\n  calendarEvents: EventInput[] = [\r\n    { title: 'Event Now', start: new Date() }\r\n  ];\r\n\r\n  toggleVisible() {\r\n    this.calendarVisible = !this.calendarVisible;\r\n  }\r\n\r\n  toggleWeekends() {\r\n    this.calendarWeekends = !this.calendarWeekends;\r\n  }\r\n\r\n  gotoPast() {\r\n    let calendarApi = this.calendarComponent.getApi();\r\n    calendarApi.gotoDate('2019-07-12'); // call a method on the Calendar object\r\n  }\r\n\r\n  handleDateClick(arg) {\r\n    if (confirm('Would you like to add an event to ' + arg.dateStr + ' ?')) {\r\n      this.calendarEvents = this.calendarEvents.concat({ // add new event data. must create new array\r\n        title: 'New Event',\r\n        start: arg.date,\r\n        allDay: arg.allDay\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ViewComponent } from './view.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: ViewComponent,\r\n        // children: [\r\n        //     { path: '', redirectTo: 'adminDashboard', pathMatch: 'prefix' },\r\n        //     { path: 'adminDashboard', loadChildren: './admin/adminDashboard.module#AdminDashboardModule' },\r\n        //     { path: 'employee', loadChildren: './onBoardEmployee/employee.module#EmployeeModule'},\r\n        //     { path: 'campaign', loadChildren: './campaign/campaign.module#CampaignModule'},\r\n        // ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ViewRoutingModule {}\r\n","module.exports = \"table {\\r\\n    width: 100%;\\r\\n    overflow-x: auto;\\r\\n    overflow-y: hidden;\\r\\n    min-width: 500px;\\r\\n}\\r\\n \\r\\nmat-header-cell {\\r\\n    text-align: left;\\r\\n    max-width: 300px;\\r\\n    max-height: 100px;\\r\\n}\\r\\n \\r\\n.mat-form-field {\\r\\n    font-size: 14px;\\r\\n    width: 100%;\\r\\n  }\\r\\n \\r\\n/*For calendar*/\\r\\n \\r\\n.app-top {\\r\\n    margin: 0 0 3em;\\r\\n  }\\r\\n \\r\\n.app-calendar {\\r\\n    margin: 0 auto;\\r\\n    max-width: 900px;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWdlbnQvY2FsZW5kYXIvdmlldy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztJQUNYLGdCQUFnQjtJQUNoQixrQkFBa0I7SUFDbEIsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixpQkFBaUI7QUFDckI7O0FBQ0E7SUFDSSxlQUFlO0lBQ2YsV0FBVztFQUNiOztBQUVBLGVBQWU7O0FBQ2Y7SUFDRSxlQUFlO0VBQ2pCOztBQUVBO0lBQ0UsY0FBYztJQUNkLGdCQUFnQjtFQUNsQiIsImZpbGUiOiJzcmMvYXBwL2FnZW50L2NhbGVuZGFyL3ZpZXcuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgb3ZlcmZsb3cteDogYXV0bztcclxuICAgIG92ZXJmbG93LXk6IGhpZGRlbjtcclxuICAgIG1pbi13aWR0aDogNTAwcHg7XHJcbn1cclxuIFxyXG5tYXQtaGVhZGVyLWNlbGwge1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIG1heC13aWR0aDogMzAwcHg7XHJcbiAgICBtYXgtaGVpZ2h0OiAxMDBweDtcclxufVxyXG4ubWF0LWZvcm0tZmllbGQge1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG4gIFxyXG4gIC8qRm9yIGNhbGVuZGFyKi9cclxuICAuYXBwLXRvcCB7XHJcbiAgICBtYXJnaW46IDAgMCAzZW07XHJcbiAgfVxyXG4gIFxyXG4gIC5hcHAtY2FsZW5kYXIge1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICBtYXgtd2lkdGg6IDkwMHB4O1xyXG4gIH0iXX0= */\"","module.exports = \"<div class=\\\"container-fluid\\\" style=\\\"margin-top:2%\\\">\\r\\n    <!-- Control the column width, and how they should appear on different devices -->\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n          <!-- <mat-form-field>\\r\\n                <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n              </mat-form-field> -->\\r\\n         <!-- <div style=\\\"margin-left:2%;width: 99%;\\\" class=\\\"mat-elevation-z8\\\">\\r\\n          <mat-table [dataSource]=\\\"dataSource\\\" matSort *ngIf=\\\"CustomerDetails\\\">\\r\\n              \\r\\n  <ng-container matColumnDef=\\\"select\\\" style=\\\"max-width: 50px\\\">\\r\\n    <mat-header-cell *matHeaderCellDef>\\r\\n      <mat-checkbox (change)=\\\"$event ? masterToggle() : null\\\"\\r\\n                    [checked]=\\\"selection.hasValue() && isAllSelected()\\\"\\r\\n                    [indeterminate]=\\\"selection.hasValue() && !isAllSelected()\\\"\\r\\n                    [aria-label]=\\\"checkboxLabel()\\\">\\r\\n      </mat-checkbox>\\r\\n    </mat-header-cell>\\r\\n    <mat-cell *matCellDef=\\\"let row\\\">\\r\\n      <mat-checkbox (click)=\\\"$event.stopPropagation()\\\"\\r\\n                    (change)=\\\"$event ? selection.toggle(row) : null\\\"\\r\\n                    [checked]=\\\"selection.isSelected(row)\\\"\\r\\n                    [aria-label]=\\\"checkboxLabel(row)\\\">\\r\\n      </mat-checkbox>\\r\\n    </mat-cell>\\r\\n  </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"Image\\\">\\r\\n               <mat-header-cell *matHeaderCellDef > Image</mat-header-cell>\\r\\n               <mat-cell *matCellDef=\\\"let user\\\">\\r\\n                    <img src=\\\"../../../assets/no-photo.png\\\"  style=\\\"width:60px;width:60px;margin:5% 5% 5% 5%\\\"> \\r\\n               </mat-cell>\\r\\n             </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"Name\\\" >\\r\\n              <mat-header-cell *matHeaderCellDef mat-sort-header><h5><b> Contact Name </b></h5> </mat-header-cell>    \\r\\n              <mat-cell *matCellDef=\\\"let user\\\" >\\r\\n                 \\r\\n                {{user.Name  | titlecase}}\\r\\n                </mat-cell>\\r\\n            </ng-container>\\r\\n         \\r\\n             <ng-container matColumnDef=\\\"Mobile\\\">\\r\\n                 <mat-header-cell *matHeaderCellDef mat-sort-header> <h5><b>Mobile No</b></h5></mat-header-cell>\\r\\n                 <mat-cell *matCellDef=\\\"let user\\\">{{user.Mobile}}</mat-cell>\\r\\n               </ng-container>\\r\\n\\r\\n               <ng-container matColumnDef=\\\"Age\\\">\\r\\n                    <mat-header-cell *matHeaderCellDef mat-sort-header><h5><b>Age</b></h5></mat-header-cell>\\r\\n                    <mat-cell *matCellDef=\\\"let user\\\">{{user.Age}}</mat-cell>\\r\\n                  </ng-container>\\r\\n\\r\\n                  <ng-container matColumnDef=\\\"City\\\">\\r\\n                        <mat-header-cell *matHeaderCellDef mat-sort-header><h5><b>City</b></h5></mat-header-cell>\\r\\n                        <mat-cell *matCellDef=\\\"let user\\\">{{user.City}}</mat-cell>\\r\\n                      </ng-container>\\r\\n    \\r\\n                      <ng-container matColumnDef=\\\"Domicile\\\">\\r\\n                            <mat-header-cell *matHeaderCellDef mat-sort-header><h5><b>Demicile</b></h5></mat-header-cell>\\r\\n                            <mat-cell *matCellDef=\\\"let user\\\">{{user.Domicile}}</mat-cell>\\r\\n                          </ng-container>\\r\\n\\r\\n\\r\\n               <ng-container matColumnDef=\\\"Details\\\">\\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header><h5><b>Call</b></h5></mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let user;let i = index;\\\">\\r\\n                 \\r\\n                    <button mat-icon-button color=\\\"primary\\\" style=\\\"color:green;background-color: lightgray\\\"  (click)=\\\"redirectToDetails(user.Name, user.Mobile)\\\">\\r\\n                         \\r\\n                            <mat-icon> dialer_sip</mat-icon>                       \\r\\n                       </button>\\r\\n                </mat-cell>\\r\\n              </ng-container>\\r\\n              \\r\\n         \\r\\n               <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\">\\r\\n               </mat-header-row>\\r\\n               <mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\" ></mat-row>\\r\\n          </mat-table>\\r\\n          <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n           </div> -->\\r\\n          <!----------------------->\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n            <ejs-schedule [eventSettings]=\\\"eventData\\\" [selectedDate]=\\\"currentDate\\\" [currentView]=\\\"newViewMode\\\">\\r\\n            </ejs-schedule>\\r\\n            <!-- <app-calendar></app-calendar> -->\\r\\n        </div>\\r\\n    </div>\\r\\n   \\r\\n</div>\\r\\n\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\r\nimport { EventSettingsModel, View } from '@syncfusion/ej2-angular-schedule';\r\n// import { MaterialModule } from '../../material/material.module';\r\nimport { MatTableDataSource } from '@angular/material';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport { AutoDialService } from '../../autoDialer.service';\r\nimport {SelectionModel} from '@angular/cdk/collections';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport { MatDialog, MatSnackBar } from '@angular/material';\r\nimport { CallDialogComponent } from '../call-dialog/call-dialog.component';\r\n\r\n@Component({\r\n \r\n  selector: 'app-view',\r\n  templateUrl: './view.component.html',\r\n  styleUrls: ['./view.component.css']\r\n})\r\nexport class ViewComponent implements OnInit{\r\n  selection = new SelectionModel(true, []);\r\n  constructor(private breakpointObserver: BreakpointObserver, private service: AutoDialService, public dialog: MatDialog) {}\r\n\r\n  CustomerDetails;\r\n  dataSource; \r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n \r\n\r\n  ngOnInit() {\r\n    // this.service.getAllCustomer().subscribe((data)=>{\r\n    //   console.log('data:',data);\r\n    //   this.CustomerDetails = data['message'];\r\n    //   //this.dataSource =this.CustomerDetails;\r\n    //   this.dataSource = new MatTableDataSource(this.CustomerDetails);\r\n    //    // Assign the paginator *after* dataSource is set\r\n    // this.dataSource.paginator = this.paginator;\r\n    // this.dataSource.sort = this.sort;\r\n    // })\r\n  }\r\n\r\n  title = 'calender';\r\n  public currentDate: Date = new Date(2019, 6, 5);\r\n  public newViewMode: View = 'Month';\r\n\r\n    // dummyData = this.service.getDummyData();\r\n    // displayDummyData = [  'Name', 'Age', 'DOB', 'Mobile', 'Domicile', 'City']\r\n   // data = this.service.getUsers();\r\n // dataSource = new MatTableDataSource(this.CustomerDetails);\r\n  // displayedColumns = ['select','name','email','phone', 'details','edit', 'delete'];\r\n  displayedColumns = ['select','Image','Name','Mobile','Age', 'City','Domicile', 'Details'];\r\n\r\n  // dataSource = this.service.getAllCustomer();\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n \r\n  }\r\n\r\n \r\n    /** Whether the number of selected elements matches the total number of rows. */\r\n    isAllSelected() {\r\n      const numSelected = this.selection.selected.length;\r\n      const numRows = this.dataSource.data.length;\r\n      return numSelected === numRows;\r\n    }\r\n  \r\n    /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n    masterToggle() {\r\n      this.isAllSelected() ?\r\n          this.selection.clear() :\r\n          this.dataSource.data.forEach(row => this.selection.select(row));\r\n    }\r\n  \r\n    /** The label for the checkbox on the passed row */\r\n    checkboxLabel(row?): string {\r\n      if (!row) {\r\n        return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\r\n      }\r\n      return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\r\n    }\r\n\r\n    //--------------------------------------------------------------Bussiness Logic -------------------------------------------------------\r\n    payload;\r\n    redirectToDetails(Name, Mobile){\r\n     // alert(Id);\r\n      this.payload = {\r\n        message: 'Login Error',\r\n        error: 'error',\r\n        name: Name,\r\n        mobile: Mobile,\r\n        image: 'image_url'\r\n      }\r\n      this.openDialog(this.payload );\r\n    }\r\n\r\n    openDialog(payload): void {\r\n      console.log(payload);\r\n      const dialogRef = this.dialog.open(CallDialogComponent, {\r\n        width: '550px',\r\n        data: { message: payload.message,error: payload.error,\r\n                name:payload.name, mobile: payload.mobile, image: payload.image\r\n        },\r\n      });\r\n  \r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The dialog was closed');\r\n        console.log(result);\r\n      });\r\n\r\n    } \r\n  \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms'\r\nimport { ViewRoutingModule } from './view-routing.module';\r\nimport { ViewComponent } from './view.component';\r\nimport { MaterialModule } from '../../material/material.module';\r\nimport {ScheduleModule, AgendaService, DayService, DragAndDropService, ResizeService, WeekService, WorkWeekService, MonthService } from '@syncfusion/ej2-angular-schedule';\r\n//import {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\n//For Calendar\r\n//import { CalendarModule } from './calendar/calendar.module';\r\nimport { CalendarComponent } from './calendar/calendar.component'\r\nimport 'hammerjs';\r\n\r\n//For calendar\r\nimport { FullCalendarModule } from '@fullcalendar/angular';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n  //      BrowserAnimationsModule,\r\n        MaterialModule,\r\n        ViewRoutingModule,\r\n        ScheduleModule,\r\n        FullCalendarModule,\r\n      //  CalendarModule\r\n    ],\r\n    providers: [AgendaService, DayService, WeekService, WorkWeekService, MonthService, DragAndDropService, ResizeService],\r\n    declarations: [ViewComponent, CalendarComponent]\r\n})\r\nexport class ViewModule {}\r\n"],"sourceRoot":""}